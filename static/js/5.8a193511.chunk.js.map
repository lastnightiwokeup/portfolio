{"version":3,"sources":["components/Header.jsx","components/Experience.jsx"],"names":["Header","props","title","_jsx","className","children","styles","ulStyle","listStylePosition","paddingLeft","subtitleContainerStyle","marginTop","marginBottom","subtitleStyle","display","inlineChild","itemStyle","Experience","theme","useContext","ThemeContext","header","_useState","useState","_useState2","_slicedToArray","data","setData","useEffect","fetch","endpoints","experiences","method","then","res","json","catch","err","_jsxs","_Fragment","Container","Timeline","lineColor","map","item","Fade","TimelineItem","dateText","dateInnerStyle","background","accentColor","style","bodyContainerStyle","color","subtitle","workDescription","point","ReactMarkdown","components","p","FallbackSpinner"],"mappings":"6IAAA,6BAaeA,UATf,SAAgBC,GACd,IAAQC,EAAUD,EAAVC,MACR,OAAOC,cAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,uJCKMI,EAAS,CACbC,QAAS,CACPC,kBAAmB,UACnBC,YAAa,IAEfC,uBAAwB,CACtBC,UAAW,GACXC,aAAc,IAEhBC,cAAe,CACbC,QAAS,gBAEXC,YAAa,CACXD,QAAS,gBAEXE,UAAW,CACTJ,aAAc,KA4EHK,UAxEf,SAAoBhB,GAClB,IAAMiB,EAAQC,qBAAWC,KACjBC,EAAWpB,EAAXoB,OACRC,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAWpB,OATAI,qBAAU,WACRC,MAAMC,IAAUC,YAAa,CAC3BC,OAAQ,QAEPC,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,IACxBF,MAAK,SAACC,GAAG,OAAKP,EAAQO,EAAIH,YAAY,IACtCK,OAAM,SAACC,GAAG,OAAKA,CAAG,GACvB,GAAG,IAGDC,eAAAC,WAAA,CAAAlC,SAAA,CACEF,cAACH,UAAM,CAACE,MAAOmB,IAEdK,EAEGvB,cAAA,OAAKC,UAAU,4BAA2BC,SACxCF,cAACqC,IAAS,CAAAnC,SACRF,cAACsC,WAAQ,CACPC,UAAU,MAAKrC,SAEdqB,EAAKiB,KAAI,SAACC,GAAI,OACbzC,cAAC0C,IAAI,CAAAxC,SACHiC,eAACQ,eAAY,CAEXC,SAAUH,EAAKG,SACfC,eAAgB,CAAEC,WAAY/B,EAAMgC,aACpCC,MAAO7C,EAAOU,UACdoC,mBAAoB,CAAEC,MAAOnC,EAAMmC,OAAQhD,SAAA,CAE3CF,cAAA,MAAIC,UAAU,aAAYC,SACvBuC,EAAK1C,QAERC,cAAA,OAAKgD,MAAO7C,EAAOI,uBAAuBL,SACxCF,cAAA,MAAAE,SACGuC,EAAKU,aAGVnD,cAAA,MAAIgD,MAAO7C,EAAOC,QAAQF,SACvBuC,EAAKW,gBAAgBZ,KAAI,SAACa,GAAK,OAC9BlB,eAAA,OAAAjC,SAAA,CACEF,cAAA,MAAAE,SACEF,cAACsD,IAAa,CACZpD,SAAUmD,EACVE,WAAY,CACVC,EAAG,YAITxD,cAAA,WATQqD,EAUJ,QA1BLZ,EAAK1C,MAAQ0C,EAAKG,WA8BpB,UAKb5C,cAACyD,UAAe,MAG5B,C","file":"static/js/5.8a193511.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Timeline, TimelineItem } from 'vertical-timeline-component-for-react';\nimport { Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport Fade from 'react-reveal';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport FallbackSpinner from './FallbackSpinner';\nimport '../css/experience.css';\n\nconst styles = {\n  ulStyle: {\n    listStylePosition: 'outside',\n    paddingLeft: 20,\n  },\n  subtitleContainerStyle: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  subtitleStyle: {\n    display: 'inline-block',\n  },\n  inlineChild: {\n    display: 'inline-block',\n  },\n  itemStyle: {\n    marginBottom: 10,\n  },\n};\n\nfunction Experience(props) {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch(endpoints.experiences, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res.experiences))\n      .catch((err) => err);\n  }, []);\n\n  return (\n    <>\n      <Header title={header} />\n\n      {data\n        ? (\n          <div className=\"section-content-container\">\n            <Container>\n              <Timeline\n                lineColor=\"red\"\n              >\n                {data.map((item) => (\n                  <Fade>\n                    <TimelineItem\n                      key={item.title + item.dateText}\n                      dateText={item.dateText}\n                      dateInnerStyle={{ background: theme.accentColor }}\n                      style={styles.itemStyle}\n                      bodyContainerStyle={{ color: theme.color }}\n                    >\n                      <h2 className=\"item-title\">\n                        {item.title}\n                      </h2>\n                      <div style={styles.subtitleContainerStyle}>\n                        <h4>\n                          {item.subtitle}\n                        </h4>\n                      </div>\n                      <ul style={styles.ulStyle}>\n                        {item.workDescription.map((point) => (\n                          <div key={point}>\n                            <li>\n                              <ReactMarkdown\n                                children={point}\n                                components={{\n                                  p: 'span',\n                                }}\n                              />\n                            </li>\n                            <br />\n                          </div>\n                        ))}\n                      </ul>\n                    </TimelineItem>\n                  </Fade>\n                ))}\n              </Timeline>\n            </Container>\n          </div>\n        ) : <FallbackSpinner /> }\n    </>\n  );\n}\n\nExperience.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default Experience;\n"],"sourceRoot":""}